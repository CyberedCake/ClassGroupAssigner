import json
import random
import string


class Convert:

    def __init__(self, name, members):
        self.name = name
        self.members = members

    def get_dict(self):
        return {
            "name": str(self.name),
            "members": self.members
            }

    def write(self):
        self.write(str(self.name))

    def write(self, file_name):
        json_data = json.dumps(self.get_dict(), indent=4)
        file = open("classes\\" + file_name + ".cgaclass", "w")
        file.writelines(json_data)
        file.close()


if __name__ == "__main__":
    print("Welcome to the converter.")
    print(" ")
    print(" ")
    print("Put a file named exactly 'conv' (ending doesn't matter) in the same folder as this script.")
    print(" ")
    print("In the file, make sure you include the names separated by a new line. For example")
    print(" ")
    print("---[ below this line is the file ]---")
    print("Thomas")
    print("Brandon")
    print("Matan")
    print("Eli")
    print("---[ above this line is the file ]---")
    print(" ")
    input("Press enter when all the instructions above have been completed.")

    print(" ")
    print(" ")
    try:
        file = open("conv", "r")

        names = []
        for line in file.readlines():
            names.append(str(line.replace("\n", "")))

        print("Found the following names: " + str(names))
    except Exception as err:
        print("Failed to find names in file 'conv': " + str(type(err))[len("<class '"):0-len("'>")] + ": " + str(err))
        input("Press enter to close")
        exit()

    print("Now we must pick a name for this list.")
    print("For example, I'd pick '<block number> - <subject>'")
    print("             ^^ Like: '2B - Anatomy & Physiology'")
    name = input("Write a name: ")

    autogenerated_name = ''.join(random.choices(string.ascii_uppercase + string.ascii_lowercase + string.digits, k=8))

    convert = Convert(name if name is not None else "autogenerated-" + str(autogenerated_name) + "-class", names)

    convert.write("classes\\autogenerated-" + str(autogenerated_name) + "-class.rclass")

    print("Converted into: " + str(convert.get_dict()))

    input("Complete")
